#include <iostream>
#include <string>
#include <fstream>
#include <sys/mman.h>
#include <fcntl.h>
#include <unistd.h>
#include <cstring>
#in#in
using namespace std;

int main() {
    string file_name, key;
    cout << "Enter the file name: ";
    cin >> file_name;
    cout << "Enter the key: ";
    cin >> key;

    ifstream ifs(file_name.c_str(), ios::binary);
    if (!ifs) {
        cerr << "Error: failed to open file " << file_name << endl;
        return 1;
    }

    int fd = open(file_name.c_str(), O_RDONLY);
    if (fd < 0) {
        cerr << "Error: failed to open file " << file_name << endl;
        return 1;
    }

    // get file size
    int file_size = lseek(fd, 0, SEEK_END);
    lseek(fd, 0, SEEK_SET);

    // map file to memory
    char *file_data = (char *) mmap(nullptr, file_size, PROT_READ | PROT_WRITE, MAP_PRIVATE, fd, 0);
    if (file_data == MAP_FAILED) {
        cerr << "Error: failed to map file to memory" << endl;
        return 1;
    }


    // xor operation
    int key_size = key.size();
    for (int i = 0; i < file_size; ++i) {
        file_data[i] ^= key[i % key_size];
    }

    // unmap file from memory
    munmap(file_data, file_size);
    close(fd);

    cout << "Decryption complete!" << endl;
    return 0;
}
